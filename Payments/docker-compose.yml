version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: payments-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-PaymentsDb}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-PaymentsDb}"]
      interval: 30s
      timeout: 10s
      retries: 5

  payments-api:
    build:
      context: .
      dockerfile: Payments.Api/Dockerfile
    container_name: payments-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=${POSTGRES_DB:-PaymentsDb};Username=${POSTGRES_USER:-postgres};Password=${POSTGRES_PASSWORD};Port=5432
    ports:
      - "${API_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
